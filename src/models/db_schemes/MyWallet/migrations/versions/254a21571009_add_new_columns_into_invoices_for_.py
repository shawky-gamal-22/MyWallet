"""add new columns into invoices for recurring invocies

Revision ID: 254a21571009
Revises: 9cf3aaf46538
Create Date: 2025-10-23 12:19:07.882715

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '254a21571009'
down_revision: Union[str, Sequence[str], None] = '9cf3aaf46538'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('invoices', sa.Column('is_recurring', sa.Boolean(), nullable=True))
    op.add_column('invoices', sa.Column('recurring_interval', sa.String(), nullable=True))
    op.add_column('invoices', sa.Column('next_due_date', sa.Date(), nullable=True))
    op.add_column('invoices', sa.Column('last_run_date', sa.Date(), nullable=True))
    op.create_index('idx_recurring_invoices', 'invoices', ['next_due_date', 'last_run_date'], unique=False, postgres_where=sa.text('is_recurring = TRUE'))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_recurring_invoices', table_name='invoices', postgres_where=sa.text('is_recurring = TRUE'))
    op.drop_column('invoices', 'last_run_date')
    op.drop_column('invoices', 'next_due_date')
    op.drop_column('invoices', 'recurring_interval')
    op.drop_column('invoices', 'is_recurring')
    # ### end Alembic commands ###
